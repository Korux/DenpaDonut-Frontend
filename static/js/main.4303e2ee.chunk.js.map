{"version":3,"sources":["global.js","theme.js","redux/actions.js","components/addSongButton.js","components/playlistShuffler.js","redux/selectors.js","components/shuffleButton.js","pages/homePage.js","pages/errorPage.js","components/audioPlayer.js","components/bottomBar.js","components/toast.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","primaryDark","primaryLight","primaryHover","globalVars","server","secondaryDark","secondaryLight","navbar","disabled","mobile","SET_SONG","SET_PLAYLIST","CLEAR_SONG","CLEAR_PLAYLIST","SET_TOAST","CLEAR_TOAST","SET_SHUFFLE","SET_PLAYLIST_IDX","setPlaylistIdx","idx","type","setToast","toast","clearToast","setShuffleState","shuffle","AddSongButton","props","React","useState","url","setURL","dispatch","useDispatch","onSubmit","event","preventDefault","msg","reqData","reqOpts","method","headers","body","JSON","stringify","fetch","then","response","json","data","console","log","Error","catch","err","value","onChange","e","target","PlaylistShuffler","Promise","resolve","reject","array","randomIndex","currentIndex","length","Math","floor","random","getSong","state","song","getPlaylist","playlist","getToast","getShuffle","ShuffleButton","onClick","shuffledPlaylist","playlistAction","useSelector","HomePage","className","ErrorPage","AudioPlayer","id","mp3","playlistIdx","useEffect","reader","getReader","ReadableStream","start","controller","pump","read","done","enqueue","close","stream","Response","blob","URL","createObjectURL","src","showFilledVolume","showSkipControls","onCanPlayThrough","onClickNext","onClickPrevious","BottomBarContainer","styled","div","BottomBar","currSong","artist","RToast","Toast","SToast","EToast","SuccessToast","onClose","show","delay","autohide","Body","message","ErrorToast","RegularToast","App","exact","path","to","baseSong","album","artists","title","year","pic","nosong","basePlaylist","noplaylist","baseToast","rootReducer","combineReducers","action","picid","songid","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4303e2ee.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  html, body {\r\n    margin: 0;\r\n    margin-top : 35px;\r\n    padding: 0;\r\n  }\r\n  *, *::after, *::before {\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    background: ${({ theme }) => theme.primaryDark};\r\n    color: ${({ theme }) => theme.primaryLight};\r\n    text-rendering: optimizeLegibility;\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  }\r\n  h1 {\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  div {\r\n    text-align: center;\r\n  }\r\n  small {\r\n    display: block;\r\n  }\r\n  a {\r\n    color: ${({ theme }) => theme.primaryHover};\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst globalVars = {\r\n  server : \"http://localhost:3000\"\r\n}\r\n\r\nexport default globalVars;","export const theme = {\r\n    primaryDark: 'rgb(40,40,40)',\r\n    primaryLight: 'rgb(239, 255, 250)',\r\n    primaryHover: 'rgb(65, 60, 140)',\r\n    secondaryDark : 'rgb(20,20,20)',\r\n    secondaryLight : 'rgb(220,220,220)',\r\n    navbar : 'rgb(20,20,20)',\r\n    disabled : 'rgb(100,100,100)',\r\n    mobile: '576px',\r\n  }","export const SET_SONG = \"SET_SONG\";\r\nexport const SET_PLAYLIST = \"SET_PLAYLIST\";\r\nexport const CLEAR_SONG = \"CLEAR_SONG\";\r\nexport const CLEAR_PLAYLIST = \"CLEAR_PLAYLIST\";\r\nexport const SET_TOAST = \"SET_TOAST\";\r\nexport const CLEAR_TOAST = \"CLEAR_TOAST\";\r\nexport const SET_SHUFFLE = \"SET_SHUFFLE\";\r\nexport const SET_PLAYLIST_IDX = \"SET_PLAYLIST_IDX\";\r\n\r\nexport function setSong(song){\r\n    return { type : SET_SONG, song };\r\n}\r\n\r\nexport function clearSong(){\r\n    return { type : CLEAR_SONG };\r\n}\r\n\r\nexport function setPlaylistIdx(idx){\r\n    return { type : SET_PLAYLIST_IDX, idx };\r\n}\r\n\r\nexport function setPlaylist(playlist){\r\n    return {type : SET_PLAYLIST, playlist };\r\n}\r\n\r\nexport function clearPlaylist(){\r\n    return { type : CLEAR_PLAYLIST };\r\n}\r\n\r\nexport function setToast(toast){\r\n    return { type : SET_TOAST, toast };\r\n}\r\n\r\nexport function clearToast(){\r\n    return { type : CLEAR_TOAST };\r\n}\r\n\r\nexport function setShuffleState(shuffle){\r\n    return {type : SET_SHUFFLE, shuffle };\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setToast } from '../redux/actions';\r\n\r\nfunction AddSongButton(props){\r\n\r\n    const [url, setURL] = React.useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    function postSong(event){\r\n        event.preventDefault();\r\n        setToast({msg : \"Adding song in background...\", type:\"regular\"});\r\n        if(props.type === \"spotify\" || props.type === \"youtube\"){\r\n            let reqData = {\r\n                url : url\r\n            };\r\n            let reqOpts = {\r\n            method : 'POST',\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body : JSON.stringify(reqData),\r\n            };\r\n        \r\n            fetch(\"http://localhost:3000/songs?source=\" + props.type, reqOpts)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                // do something with data\r\n                if(data.Error)dispatch(setToast({msg : data.Error, type:\"error\"}));\r\n                else dispatch(setToast({msg : \"Successfully added song.\", type:\"success\"}));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                // do something with error\r\n                dispatch(setToast({msg : \"Unknown error adding song. Please try again.\", type:\"error\"}));\r\n            });\r\n        }else{\r\n            console.log(\"Song URL type not specified\");\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={postSong}>\r\n        <input value={url} onChange={(e) => setURL(e.target.value)}/>\r\n        <button>{props.type}</button>\r\n      </form>\r\n    );\r\n\r\n}\r\n\r\nexport default AddSongButton;","import globalVars from '../global';\r\n\r\nfunction shuffle(array) {\r\n    var currentIndex = array.length,  randomIndex;\r\n  \r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n  \r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n  \r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex], array[currentIndex]];\r\n    }\r\n  \r\n    return array;\r\n  }\r\n\r\nconst PlaylistShuffler = () => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        fetch(globalVars.server + \"/songs\")\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            shuffle(data);\r\n            resolve(data);\r\n        })\r\n        .catch(err => {\r\n            reject(err);\r\n        });\r\n    });\r\n};\r\n\r\nexport default PlaylistShuffler;","\r\nexport function getSong(state){\r\n    return state.song;\r\n}\r\n\r\nexport function getPlaylist(state){\r\n    return state.playlist;\r\n}\r\n\r\nexport function getToast(state){\r\n    return state.toast;\r\n}\r\n\r\nexport function getShuffle(state){\r\n    return state.shuffle;\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {clearPlaylist, clearSong, setPlaylist, setPlaylistIdx, setShuffleState, setToast} from '../redux/actions';\r\nimport PlaylistShuffler from '../components/playlistShuffler';\r\nimport { getShuffle } from '../redux/selectors';\r\n\r\nfunction ShuffleButton(){\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setShuffledPlaylist = () => {\r\n        dispatch(setShuffleState(\"loading\"));\r\n        dispatch(clearPlaylist());\r\n        dispatch(clearSong());\r\n        PlaylistShuffler().then(shuffledPlaylist => {\r\n            let playlistAction = setPlaylist(shuffledPlaylist);\r\n            dispatch(playlistAction);\r\n            dispatch(setPlaylistIdx(0));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch(setToast({type : \"error\", msg : \"Error shuffling playlist. Please try again.\"}));\r\n        });\r\n    };\r\n\r\n    return(\r\n        <button onClick={setShuffledPlaylist} disabled={useSelector(getShuffle).shuffle === \"loading\"}>\r\n            aa\r\n        </button>\r\n    );\r\n\r\n}\r\n\r\nexport default ShuffleButton;","import React from 'react';\r\n\r\nimport AddSongButton from '../components/addSongButton';\r\nimport ShuffleButton from '../components/shuffleButton';\r\n\r\nfunction HomePage(){\r\n  \r\n    return (\r\n      <div className=\"App\">\r\n        <AddSongButton type=\"youtube\"/>\r\n        <AddSongButton type=\"spotify\"/>\r\n        <ShuffleButton/>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nfunction ErrorPage(){\r\n\r\n    return(<div>Err</div>);\r\n\r\n}\r\n\r\nexport default ErrorPage;","import React, { useEffect } from 'react';\r\n\r\nimport Player from 'react-h5-audio-player';\r\nimport 'react-h5-audio-player/lib/styles.css';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSong, getPlaylist } from '../redux/selectors';\r\nimport { setPlaylistIdx, setShuffleState, setSong, setToast } from \"../redux/actions\";\r\n\r\nimport globalVars from '../global';\r\n\r\nfunction AudioPlayer(){\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    var id = useSelector(getSong).mp3;\r\n    var playlist = useSelector(getPlaylist).playlist;\r\n    var playlistIdx = useSelector(getPlaylist).idx;\r\n    const [url, setURL] = React.useState(null);\r\n\r\n    function nextSong(){\r\n        if(playlistIdx === -1) return;\r\n        else if(playlistIdx + 1 === playlist.length){\r\n            // jump to end of song\r\n        }\r\n        else{\r\n            dispatch(setPlaylistIdx(playlistIdx + 1));\r\n        }\r\n    }\r\n\r\n    function previousSong(){\r\n        if(playlistIdx === -1) return;\r\n        else if(playlistIdx === 0){\r\n            // seek to beginning of song\r\n        }else{\r\n            dispatch(setPlaylistIdx(playlistIdx - 1));\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(id !== null){\r\n            let url = globalVars.server + \"/mp3/\" + id;\r\n            fetch(url)\r\n            .then(response => response.body)\r\n            .then(body => {\r\n                const reader = body.getReader();\r\n                return new ReadableStream({\r\n                    start(controller) {\r\n                      return pump();\r\n                      function pump() {\r\n                        return reader.read().then(({ done, value }) => {\r\n                          // When no more data needs to be consumed, close the stream\r\n                            if (done) {\r\n                              controller.close();\r\n                              return;\r\n                            }\r\n                            // Enqueue the next data chunk into our target stream\r\n                            controller.enqueue(value);\r\n                            return pump();\r\n                            });\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            .then(stream => new Response(stream))\r\n            .then(response => response.blob())\r\n            .then(blob => URL.createObjectURL(blob))\r\n            .then(url => setURL(url))\r\n            .catch(err => {\r\n                console.log(err);\r\n                dispatch(setToast({type : \"error\", msg : \"Error loading audio. Please try again.\"}));\r\n            });\r\n        }\r\n    },[id, dispatch]);\r\n    \r\n    useEffect(() => {\r\n        if(playlist && playlistIdx !== -1){\r\n            dispatch(setSong(playlist[playlistIdx]));\r\n        }\r\n    }, [playlistIdx, playlist, dispatch]);\r\n\r\n    return(\r\n        <Player\r\n            src={url}\r\n            showFilledVolume\r\n            showSkipControls\r\n            // showJumpControls={false}\r\n            onCanPlayThrough={() => dispatch(setShuffleState(\"ready\"))}\r\n            onClickNext={nextSong}\r\n            onClickPrevious={previousSong}\r\n        />\r\n    );\r\n\r\n}\r\n//\"http://localhost:3000/test/60efa1df19860709e06f2170\"\r\nexport default AudioPlayer;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { getSong } from '../redux/selectors';\r\n\r\nimport AudioPlayer from './audioPlayer';\r\n\r\nconst BottomBarContainer = styled.div`\r\n    width : 100%;\r\n    height : 10%;\r\n    position : fixed;\r\n    bottom : 0;\r\n    right : 0;\r\n    background-color:black;\r\n`;\r\n\r\n\r\nfunction BottomBar(){\r\n\r\n    var currSong = useSelector(getSong);\r\n\r\n    return(\r\n        <BottomBarContainer>\r\n            {currSong.artist}\r\n            <AudioPlayer/>\r\n        </BottomBarContainer>\r\n        \r\n    );\r\n}\r\n\r\nexport default BottomBar;","import React from \"react\";\r\nimport {Toast} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\n/*\r\nRegular Toast\r\n*/ \r\n\r\nconst RToast = styled(Toast)`\r\n    background-color:rgb(30,30,30);\r\n    opacity:0.9 !important;\r\n    color:rgb(220,220,220) !important;\r\n    position: fixed;\r\n    top:1rem;\r\n    right:0;\r\n    left:0;\r\n    margin: auto;\r\n    z-index: 7000;\r\n    color:black;\r\n    font-size:18px;\r\n`;\r\n\r\n/*\r\nSuccess Toast\r\n*/ \r\n\r\nconst SToast = styled(Toast)`\r\n    background-color:rgb(30,30,220);\r\n    opacity:0.9 !important;\r\n    color:rgb(220,220,220) !important;\r\n    position: fixed;\r\n    top:1rem;\r\n    right:0;\r\n    left:0;\r\n    margin: auto;\r\n    z-index: 7000;\r\n    color:black;\r\n    font-size:18px;\r\n`;\r\n\r\n/*\r\nError Toast\r\n*/ \r\n\r\n\r\nconst EToast = styled(Toast)`\r\n    background-color:rgb(220,30,30);\r\n    opacity:0.9 !important;\r\n    color:rgb(220,220,220) !important;\r\n    position: fixed;\r\n    top:1rem;\r\n    right:0;\r\n    left:0;\r\n    margin: auto;\r\n    z-index: 7000;\r\n    color:black;\r\n    font-size:18px;\r\n`;\r\n\r\nexport function SuccessToast(props){\r\n\r\n    return(\r\n        <SToast onClose={props.onClose} show={props.show} delay = {2000} autohide>\r\n            \r\n            <Toast.Body>{props.message}</Toast.Body>\r\n        </SToast>\r\n    );\r\n}\r\n\r\n/*\r\nError Toast\r\n*/ \r\n\r\nexport function ErrorToast(props){\r\n    return(\r\n        <EToast onClose={props.onClose} show={props.show} delay = {2000} autohide>\r\n            \r\n            <Toast.Body>{props.message}</Toast.Body>\r\n        </EToast>\r\n    );\r\n}\r\n\r\n/*\r\nRegular Toast\r\n*/\r\n\r\nexport function RegularToast(props){\r\n    return(\r\n        <RToast onClose={props.onClose} show={props.show} delay = {2000} autohide>\r\n            \r\n            <Toast.Body>{props.message}</Toast.Body>\r\n        </RToast>\r\n    );\r\n}","import React from 'react';\n\nimport { GlobalStyles } from './global';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from './theme';\n\nimport {Redirect, Route, Switch} from 'react-router-dom';\n\nimport HomePage from './pages/homePage';\nimport ErrorPage from './pages/errorPage';\n\nimport BottomBar from './components/bottomBar';\n\nimport {SuccessToast, ErrorToast, RegularToast } from './components/toast';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { clearToast } from './redux/actions';\nimport { getToast } from './redux/selectors';\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  return(\n    <ThemeProvider theme={theme}>\n        \n    <GlobalStyles />\n    <ErrorToast onClose={() => dispatch(clearToast())} show={useSelector(getToast).type === \"error\"} message={useSelector(getToast).msg}/>\n    <SuccessToast onClose={() => dispatch(clearToast())} show={useSelector(getToast).type === \"success\"} message={useSelector(getToast).msg}/>\n    <RegularToast onClose={() => dispatch(clearToast())} show={useSelector(getToast).type === \"regular\"} message={useSelector(getToast).msg}/>\n    {/* navbar here */}\n    <Switch>\n\n      <Route exact path=\"/home\">\n        <HomePage/>\n      </Route>\n\n      <Route exact path=\"/\">\n        <Redirect to=\"/home\"/>\n      </Route>\n\n      <Route exact path=\"/error\">\n        <ErrorPage/>\n      </Route>\n    \n      <Route>\n        <Redirect to=\"/error\"/>\n      </Route>\n\n\n    </Switch>\n  \n    <BottomBar/>\n\n</ThemeProvider>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\n\r\nimport {\r\n    SET_SONG,\r\n    SET_PLAYLIST,\r\n    CLEAR_SONG,\r\n    CLEAR_PLAYLIST,\r\n    SET_TOAST,\r\n    CLEAR_TOAST,\r\n    SET_SHUFFLE,\r\n    SET_PLAYLIST_IDX,\r\n} from './actions.js';\r\n\r\nconst baseSong = {\r\n    album : null,\r\n    artist : null,\r\n    artists : null,\r\n    title : null,\r\n    year : null,\r\n    pic : null,\r\n    mp3 : null,\r\n    nosong : true\r\n};\r\n\r\nconst basePlaylist = {\r\n    playlist : null,\r\n    noplaylist : true,\r\n    idx : -1,\r\n}\r\n\r\nconst baseToast = {\r\n    type : \"none\",\r\n    msg : \"\"\r\n}\r\n\r\nfunction songReducer(state=baseSong, action){\r\n    switch(action.type){\r\n        case SET_SONG:\r\n            return{\r\n                album : action.song.album,\r\n                artist : action.song.artist,\r\n                artists : action.song.artists,\r\n                title : action.song.title,\r\n                year : action.song.year,\r\n                pic : action.song.picid,\r\n                mp3 : action.song.songid,\r\n                nosong : false\r\n            }\r\n        case CLEAR_SONG:\r\n            return baseSong;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction playlistReducer(state=basePlaylist, action){\r\n    switch(action.type){\r\n        case SET_PLAYLIST:\r\n            return{\r\n                ...state,\r\n                playlist : action.playlist,\r\n                noplaylist : false,\r\n            }\r\n        case CLEAR_PLAYLIST:\r\n            return basePlaylist;\r\n        case SET_PLAYLIST_IDX:\r\n            return{\r\n                ...state,\r\n                idx : action.idx,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction toastReducer(state=baseToast, action){\r\n    switch(action.type){\r\n        case SET_TOAST:\r\n            return{\r\n                msg : action.toast.msg,\r\n                type : action.toast.type\r\n            }\r\n        case CLEAR_TOAST:\r\n            return baseToast;\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nfunction shuffleReducer(state={shuffle:\"ready\"}, action){\r\n    switch(action.type){\r\n        case SET_SHUFFLE:\r\n            return{\r\n                shuffle : action.shuffle\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    song : songReducer,\r\n    playlist : playlistReducer,\r\n    toast : toastReducer,\r\n    shuffle : shuffleReducer,\r\n});\r\n\r\nexport default rootReducer;","\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './reducer';\r\nconst store = createStore(rootReducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}